/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/staging/rusty_japanese_arcade/rusty_japanese_arcade.glb --types --keepnames --weld  
Author: Toni Garc√≠a Vilche (https://sketchfab.com/zul_gv)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rusty-japanese-arcade-2938ae13a77c46e8afabb41eba18e699
Title: Rusty Japanese Arcade
*/

import { Mesh, MeshStandardMaterial } from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Arcade_Arcade_0: Mesh
    LightBar_Material_0: Mesh
  }
  materials: {
    Arcade: MeshStandardMaterial
    Material: MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

const FILE_URL = "https://d1zhlm2vwhu5x.cloudfront.net/models/rusty_japanese_arcade-1705727751/rusty_japanese_arcade-transformed.glb.gz";;

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Arcadefbx" scale={0.01}>
        <mesh name="Arcade_Arcade_0" geometry={nodes.Arcade_Arcade_0.geometry} material={materials.Arcade} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh name="LightBar_Material_0" geometry={nodes.LightBar_Material_0.geometry} material={materials.Material} rotation={[-Math.PI / 2, Math.PI / 2, 0]} scale={100} />
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
