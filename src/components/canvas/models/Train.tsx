/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/staging/train/train.glb --types --keepnames --simplify --weld --transform  
Files: public/staging/train/train.glb [505.78KB] > C:\Users\anyim\Desktop\Projects\Zay\portfolio2024\train-transformed.glb [24.66KB] (95%)
*/

import { Mesh, MeshStandardMaterial } from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ElectricTrain: Mesh
  }
  materials: {
    ElectricTrain: MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/train-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="ElectricTrain" geometry={nodes.ElectricTrain.geometry} material={materials.ElectricTrain} position={[0, 0.28, 0]} />
    </group>
  )
}

useGLTF.preload('/train-transformed.glb')
